data$FacType <- ifelse(!is.na(data$FUNCCLASS) & !is.na(data$ACCESS) & (data$FUNCCLASS==1 | data$FUNCCLASS==11 | data$FUNCCLASS==12 | data$ACCESS==2) & data$FacType=="ini" ,"fwy",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR!=0 & data$Lanes == 1 & data$FacType=="ini" ,"owol",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR!=0 & data$Lanes > 1 & data$FacType=="ini" ,"owml",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR==0 & data$Lanes == 1 & data$FacType=="ini" ,"twtl",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & !is.na(data$TWOTURNLN) & data$DIR==0 & data$Lanes == 1 & data$TWOTURNLN==1 & data$MEDIAN !=1 & data$FacType=="ini" ,"tw3l",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & data$DIR==0 & data$Lanes > 1 & data$MEDIAN !=1 & data$FacType=="ini" ,"twmlu ",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & data$DIR!=0 & data$Lanes > 1 & data$MEDIAN ==1 & data$FacType=="ini" ,"twmld ",data$FacType)
table(data$FacType)
#clean up 0/998 post speed
data <- data[data$SPD_LMT>0 & data$SPD_LMT<100,]
#Convert KM to mile
data$FFS <- data$PCT.85 * 0.621371
data_fwy <- data[data$FacType=="fwy",]
data_owml <- data[data$FacType=="owml",]
data_owol <- data[data$FacType=="owol",]
data_ramp <- data[data$FacType=="ramp",]
data_rndabt1 <- data[data$FacType=="rndabt1",]
data_twmlu <- data[data$FacType=="twmlu",]
data_twtl <- data[data$FacType=="twtl",]
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
data_fwy[1:3,]
data_fwy[1:13,]
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
data_owml <- data[data$FacType=="owml" & !is.na(data$FacType),]
data_owol <- data[data$FacType=="owol" & !is.na(data$FacType),]
data_ramp <- data[data$FacType=="ramp" & !is.na(data$FacType),]
data_rndabt1 <- data[data$FacType=="rndabt1" & !is.na(data$FacType),]
data_twmlu <- data[data$FacType=="twmlu" & !is.na(data$FacType),]
data_twtl <- data[data$FacType=="twtl" & !is.na(data$FacType),]
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
data_fwy[1:13,]
summary(data_fwy)
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
fwy_fit <- lm(FFS~SPD_LMT,data=data)
summary(fwy_fit)
str(data)
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
fwy_fit
data$SPD_LMT <- as.numeric(data$SPD_LMT)
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
data_owml <- data[data$FacType=="owml" & !is.na(data$FacType),]
data_owol <- data[data$FacType=="owol" & !is.na(data$FacType),]
data_ramp <- data[data$FacType=="ramp" & !is.na(data$FacType),]
data_rndabt1 <- data[data$FacType=="rndabt1" & !is.na(data$FacType),]
data_twmlu <- data[data$FacType=="twmlu" & !is.na(data$FacType),]
data_twtl <- data[data$FacType=="twtl" & !is.na(data$FacType),]
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
summary.lm(fwy_fit)
coef(fwy_fit)
confint(fwy_fit)
summary(data_fwy)
table(data$FacType)
data$FacType <- "ini"
table(data$FacType)
data$FacType <- ifelse(is.na(data$FUNCCLASS) & data$FacType=="ini","gis",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$FUNCCLASS==99 & data$FacType=="ini","cc",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$FUNCCLASS==92 & data$FacType=="ini" ,"rndabt2",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$FUNCCLASS==91 & data$FacType=="ini" ,"rndabt1",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$RAMP) & data$RAMP==1 & data$FacType=="ini" ,"ramp",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$FUNCCLASS) & !is.na(data$ACCESS) & (data$FUNCCLASS==1 | data$FUNCCLASS==11 | data$FUNCCLASS==12 | data$ACCESS==2) & data$FacType=="ini" ,"fwy",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR!=0 & data$Lanes == 1 & data$FacType=="ini" ,"owol",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR!=0 & data$Lanes > 1 & data$FacType=="ini" ,"owml",data$FacType)
table(data$FacType)
data$FacType <- ifelse(data$DIR==0 & data$Lanes == 1 & data$FacType=="ini" ,"twtl",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & !is.na(data$TWOTURNLN) & data$DIR==0 & data$Lanes == 1 & data$TWOTURNLN==1 & data$MEDIAN !=1 & data$FacType=="ini" ,"tw3l",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & data$DIR==0 & data$Lanes > 1 & data$MEDIAN !=1 & data$FacType=="ini" ,"twmlu",data$FacType)
table(data$FacType)
data$FacType <- ifelse(!is.na(data$MEDIAN) & data$DIR!=0 & data$Lanes > 1 & data$MEDIAN ==1 & data$FacType=="ini" ,"twmld",data$FacType)
table(data$FacType)
data <- data[data$SPD_LMT>0 & data$SPD_LMT<100,]
#Convert KM to mile
data$FFS <- data$PCT.85 * 0.621371
data$SPD_LMT <- as.numeric(data$SPD_LMT)
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
data_owml <- data[data$FacType=="owml" & !is.na(data$FacType),]
data_owol <- data[data$FacType=="owol" & !is.na(data$FacType),]
data_ramp <- data[data$FacType=="ramp" & !is.na(data$FacType),]
data_rndabt1 <- data[data$FacType=="rndabt1" & !is.na(data$FacType),]
data_twmlu <- data[data$FacType=="twmlu" & !is.na(data$FacType),]
data_twtl <- data[data$FacType=="twtl" & !is.na(data$FacType),]
summary(data_fwy)
fwy_fit <- lm(data_fwy$FFS~data_fwy$SPD_LMT,data=data_fwy)
summary.lm(fwy_fit)
fwy_fit <- lm(FFS ~ SPD_LMT,data=data_fwy)
fwy_fit
write.table(data_fwy,"fwy.csv",row.names=F,quote=F,sep=",")
confint(fwy_fit)
lm.influence(fwy_fit)
dim(data_fwy)
data_fwy[1:3,]
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),c("SPD_LMT","FFS")]
fwy_fit <- lm(FFS ~ SPD_LMT,data=data_fwy)
summary.lm(fwy_fit)
data_fwy[1:3]
data_fwy[1:3,]
data_fwy[100:103,]
effects(fwy_fit)
coef(fwy_fit)
fitted(fwy_fit)
vcov(fwy_fit)
street1 <- read.dbf("CHCRPA_NavStreets14Q3_LinkDir51Cor_WM84.dbf")
names(street1)
street1 <- street1[,c("LINK_DIR","FR_SPD_LIM")]
data <- merge(data,street1,by="LINK_DIR")
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType)]
data[1:3,]
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
data <- data[data$FR_SPD_LIM>0 & data$FR_SPD_LIM<100,]
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
fwy_fit <- lm(FFS ~ FR_SPD_LIM,data=data_fwy)
summary.lm(fwy_fit)
fwy_fit <- lm(FFS ~ FR_SPD_LIM,data=data)
summary.lm(fwy_fit)
FAC1_fit <- lm(FFS ~ FR_SPD_LIM,data=data)
summary.lm(FAC1_fit)
FAC1_fit <- lm(FFS ~0+ FR_SPD_LIM,data=data)
summary.lm(FAC1_fit)
FAC1_fit <- lm(FFS ~ 0 + FR_SPD_LIM,data=data)
summary.lm(FAC1_fit)
summary(lm(FFS ~ FR_SPD_LIM,data=data))
save.image("Q:/Projects/TN/15029_ChattanoogaTDM/FromChattanooga/090115/.RData")
summary(with(data,lm(FFS ~ SPD_LMT)))
attach(data)
summary(lm(FFS ~ SPD_LMT))
detach(data)
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
write.table(data_fwy,"fwy.csv",row.names=F,quote=F,sep=",")
data_fwy <- read.table("fwy.csv",sep=",",header=T)
summary(lm(FFS ~ SPD_LMT,data=data_fwy))
names(test)
names(test)
names(street)
fwy_fit <- lm(FFS~SPD_LMT,data=data_fwy)
summary(fwy_fit)
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
fwy_fit <- summary(lm(FFS~SPD_LMT,data=data_fwy))
fwy_fit
owml_fit <- summary(lm(FFS~SPD_LMT,data=data_owml))
owml_fit
owol_fit <- summary(lm(FFS~SPD_LMT,data=data_owol))
owol_fit
ramp_fit <- summary(lm(FFS~SPD_LMT,data=data_ramp))
ramp_fit
rndabt1_fit <- summary(lm(FFS~SPD_LMT,data=data_rndabt1))
rndabt1_fit
twmlu_fit <- summary(lm(FFS~SPD_LMT,data=data_twmlu))
twmlu_fit
summary(data_fwy)
data_fwy$SPD_DIFF <- data_fwy$FFS - data_fwy$SPD_LMT
summary(data_fwy$SPD_DIFF)
table(data_fwy$FacType)
table(data_fwy$FUNCCLASS)
table(data_fwy$FUNCCLASS,data$FR_SPD_LIM)
table(data_fwy$FUNCCLASS,data_fwy$FR_SPD_LIM)
table(data_fwy$FFS,data_fwy$FR_SPD_LIM)
plot(data_fwy$FFS,data_fwy$SPD_LMT)
data_fwy$outliner <- if(data_fwy$FFS/data_fwy$SPD_LMT>3 | data_fwy$FFS/data_fwy$SPD_LMT<0.5,1,0)
data_fwy <-  data_fwy[data_fwy$outliner==0,]
data_fwy$outliner <- ifelse(data_fwy$FFS/data_fwy$SPD_LMT>3 | data_fwy$FFS/data_fwy$SPD_LMT<0.5,1,0)
data_fwy <-  data_fwy[data_fwy$outliner==0,]
data_fwy <- data[data$FacType=="fwy" & !is.na(data$FacType),]
data_fwy$outliner <- ifelse(data_fwy$FFS/data_fwy$SPD_LMT>3 | data_fwy$FFS/data_fwy$SPD_LMT<0.5,1,0)
data_fwy[1:5,]
data_fwy <-  data_fwy[data_fwy$outliner==0,]
fwy_fit <- summary(lm(FFS~SPD_LMT,data=data_fwy))
fwy_fit
owml_fit$outliner <- as.numeric(ifelse(owml_fit$FFS/owml_fit$SPD_LMT>3 | owml_fit$FFS/owml_fit$SPD_LMT<0.5,1,0))
owml_fit <-  owml_fit[owml_fit$outliner==0,]
fwy_fit <- summary(lm(FFS~SPD_LMT,data=owml_fit))
data_owml$outliner <- as.numeric(ifelse(data_owml$FFS/data_owml$SPD_LMT>3 | data_owml$FFS/data_owml$SPD_LMT<0.5,1,0))
data_owml <-  data_owml[data_owml$outliner==0,]
owml_fit <- summary(lm(FFS~SPD_LMT,data=data_owml))
owml_fit
data_owol$outliner <- as.numeric(ifelse(data_owol$FFS/data_owol$SPD_LMT>3 | data_owol$FFS/data_owol$SPD_LMT<0.5,1,0))
data_owol <-  data_owol[data_owol$outliner==0,]
owol_fit <- summary(lm(FFS~SPD_LMT,data=data_owol))
owol_fit
data_ramp$outliner <- as.numeric(ifelse(data_ramp$FFS/data_ramp$SPD_LMT>3 | data_ramp$FFS/data_ramp$SPD_LMT<0.5,1,0))
data_ramp <-  data_ramp[data_ramp$outliner==0,]
ramp_fit <- summary(lm(FFS~SPD_LMT,data=data_ramp))
ramp_fit
plot(data_ramp$FFS,data_ramp$SPDLMT)
plot(data_ramp$FFS,data_ramp$SPD_LMT)
save.image("Q:/Projects/TN/15029_ChattanoogaTDM/FromChattanooga/090115/Rnov17.RData")
setwd("E:/Projects/Clients/DVRPC/DV_33_ReducedZones/Calibration_NewDaySim/DaySimSummaries")
##This is a temporary main control file with lots of TODOs to move
##this whole effort to a package with project specific config and run files
#Rprof()
#-----------------------
#Load packages
#-----------------------
##TODO consider local R installation, with predownloaded packages in that library
library(foreign)
library(reshape)
library(XLConnect)
library(descr)
library(Hmisc)
library(data.table)
library(plyr)
#------------------------------------
#Source functions and config settings
#------------------------------------
source("utilfunc.R")
#TODO function in package to create template config file in a specified location
source("daysim_output_config.R")
progressStart("run DaySim summaries",14)
#-----------------------
#Load data
#-----------------------
#Geographical correspondence
countycorr <- fread(tazcountycorr)
#Load DaySim outputs into Rdata files
progressNextStep("reading hh data")
if(runWrkSchLocationChoice | runVehAvailability | runDayPattern | runTourDestination | runTourMode)
{
if(prepDaySim)
readSaveRdata(dshhfile,"dshhdata")
if(prepSurvey)
readSaveRdata(surveyhhfile,"survhhdata")
}
progressNextStep("reading person data")
if(runWrkSchLocationChoice | runVehAvailability | runDayPattern | runTourDestination | runTourMode | runTourTOD | runTripMode | runTripTOD)
{
if(prepDaySim)
readSaveRdata(dsperfile,"dsperdata")
if(prepSurvey)
readSaveRdata(surveyperfile,"survperdata")
}
progressNextStep("reading person day data")
if(runDayPattern)
{
if(prepDaySim)
readSaveRdata(dspdayfile,"dspdaydata")
if(prepSurvey)
readSaveRdata(surveypdayfile,"survpdaydata")
}
progressNextStep("reading person day tour data")
if(runDayPattern | runTourDestination | runTourMode | runTourTOD | runTripMode)
{
if(prepDaySim)
readSaveRdata(dstourfile,"dstourdata")
if(prepSurvey)
readSaveRdata(surveytourfile,"survtourdata")
}
progressNextStep("reading person day trip data")
if(runDayPattern | runTripMode | runTripTOD)
{
if(prepDaySim)
readSaveRdata(dstripfile,"dstripdata")
if(prepSurvey)
readSaveRdata(surveytripfile,"survtripdata")
}
#Optional tour weight adjustment
if(tourAdj)
{
touradj <- fread(tourAdjFile)
}
#force gc()
gc()
#-----------------------
#Run tabulations
#-----------------------
##TODO split between preparing tables in an R object and then putting them somewhere
##TODO e.g. in a spreadsheet, in a pdf report, etc.
#source("nonhwy.R")
progressNextStep("summarizing work location choice")
if(runWrkSchLocationChoice)
{
source("wrkschlocation.R")
}
progressNextStep("summarizing vehicle ownership choice")
if(runVehAvailability)
{
source("vehavailability.R")
}
progressNextStep("summarizing Day pattern")
if(runDayPattern)
{
source("daypattern.R")
}
progressNextStep("summarizing Destination Choice")
if(runTourDestination)
{
source("tourdestination.R")
}
progressNextStep("summarizing Trip Destination Choice")
if(runTourDestination)
{
source("tripdestination.R")
}
progressNextStep("summarizing Tour Mode Choice")
if(runTourMode)
{
source("tourmode.R")
}
progressNextStep("summarizing Tour Time of Day Choice")
if(runTourTOD)
{
source("tourtod.R")
}
progressNextStep("summarizing Trip Mode Choice")
if(runTripMode)
{
source("tripmode.R")
}
progressNextStep("summarizing Trip Time of Day Choice")
if(runTripTOD)
{
source("triptod.R")
}
progressEnd(outputsDir)
# Rprof(NULL)
# memprof <- summaryRprof()
###This script generates Day Patterns from DaySim run outputs
print("Day Pattern Summary...Started")
prep_perdata <- function(perdata,hhdata)
{
hhdata[,hhcounty:=countycorr$DISTRICT[match(hhtaz,countycorr$TAZ)]]
hhdata[,inccat:=findInterval(hhincome,c(0,15000,50000,75000))]
perdata[,hh16cat:=ifelse(pagey>=16,1,0)]
hhdata <- merge(hhdata,perdata[,list(hh16cat=sum(hh16cat)),by=hhno],by="hhno",all.x=T)
hhdata[hh16cat>4,hh16cat:=4]
hhdata[hhvehs == 0,vehsuf:=1]
hhdata[hhvehs > 0 & hhvehs < hh16cat,vehsuf:=2]
hhdata[hhvehs > 0 & hhvehs == hh16cat,vehsuf:=3]
hhdata[hhvehs > 0 & hhvehs > hh16cat,vehsuf:=4]
perdata <- merge(perdata,hhdata[,list(hhno,hhcounty,inccat,vehsuf)],by="hhno",all.x=T)
return(perdata)
}
prep_pdaydata <- function(pdaydata,perdata)
{
pdaydata <- merge(pdaydata,perdata,by=c("hhno","pno"),all.x=T)
if(excludeChildren5)
pdaydata <- pdaydata[pptyp<8]
pdaydata[,pbtours:= pbtours + metours]
pdaydata[,sotours:= sotours + retours]
pdaydata[,pbstops:= pbstops + mestops]
pdaydata[,sostops:= sostops + restops]
pdaydata[,tottours:=wktours+sctours+estours+pbtours+shtours+mltours+sotours]
pdaydata[tottours>3,tottours:=3]
pdaydata[,totstops:=wkstops+scstops+esstops+pbstops+shstops+mlstops+sostops]
pdaydata[tottours == 0 & totstops == 0,tourstop:=0]
pdaydata[tottours == 1 & totstops == 0,tourstop:=1]
pdaydata[tottours == 1 & totstops == 1,tourstop:=2]
pdaydata[tottours == 1 & totstops == 2,tourstop:=3]
pdaydata[tottours == 1 & totstops >= 3,tourstop:=4]
pdaydata[tottours == 2 & totstops == 0,tourstop:=5]
pdaydata[tottours == 2 & totstops == 1,tourstop:=6]
pdaydata[tottours == 2 & totstops == 2,tourstop:=7]
pdaydata[tottours == 2 & totstops >= 3,tourstop:=8]
pdaydata[tottours == 3 & totstops == 0,tourstop:=9]
pdaydata[tottours == 3 & totstops == 1,tourstop:=10]
pdaydata[tottours == 3 & totstops == 2,tourstop:=11]
pdaydata[tottours == 3 & totstops >= 3,tourstop:=12]
pdaydata[wktours == 0 & wkstops == 0,wktostp:=1]
pdaydata[wktours == 0 & wkstops >= 1,wktostp:=2]
pdaydata[wktours >= 1 & wkstops == 0,wktostp:=3]
pdaydata[wktours >= 1 & wkstops >= 1,wktostp:=4]
pdaydata[sctours == 0 & scstops == 0,sctostp:=1]
pdaydata[sctours == 0 & scstops >= 1,sctostp:=2]
pdaydata[sctours >= 1 & scstops == 0,sctostp:=3]
pdaydata[sctours >= 1 & scstops >= 1,sctostp:=4]
pdaydata[estours == 0 & esstops == 0,estostp:=1]
pdaydata[estours == 0 & esstops >= 1,estostp:=2]
pdaydata[estours >= 1 & esstops == 0,estostp:=3]
pdaydata[estours >= 1 & esstops >= 1,estostp:=4]
pdaydata[pbtours == 0 & pbstops == 0,pbtostp:=1]
pdaydata[pbtours == 0 & pbstops >= 1,pbtostp:=2]
pdaydata[pbtours >= 1 & pbstops == 0,pbtostp:=3]
pdaydata[pbtours >= 1 & pbstops >= 1,pbtostp:=4]
pdaydata[shtours == 0 & shstops == 0,shtostp:=1]
pdaydata[shtours == 0 & shstops >= 1,shtostp:=2]
pdaydata[shtours >= 1 & shstops == 0,shtostp:=3]
pdaydata[shtours >= 1 & shstops >= 1,shtostp:=4]
pdaydata[mltours == 0 & mlstops == 0,mltostp:=1]
pdaydata[mltours == 0 & mlstops >= 1,mltostp:=2]
pdaydata[mltours >= 1 & mlstops == 0,mltostp:=3]
pdaydata[mltours >= 1 & mlstops >= 1,mltostp:=4]
pdaydata[sotours == 0 & sostops == 0,sotostp:=1]
pdaydata[sotours == 0 & sostops >= 1,sotostp:=2]
pdaydata[sotours >= 1 & sostops == 0,sotostp:=3]
pdaydata[sotours >= 1 & sostops >= 1,sotostp:=4]
pdaydata[,wktopt:=findInterval(wktours,0:3)]
pdaydata[,sctopt:=findInterval(sctours,0:3)]
pdaydata[,estopt:=findInterval(estours,0:3)]
pdaydata[,pbtopt:=findInterval(pbtours,0:3)]
pdaydata[,shtopt:=findInterval(shtours,0:3)]
pdaydata[,mltopt:=findInterval(mltours,0:3)]
pdaydata[,sotopt:=findInterval(sotours,0:3)]
return(pdaydata)
}
prep_tourdata <- function(tourdata,perdata)
{
tourdata <- merge(tourdata,perdata,by=c("hhno","pno"),all.x=T)
if(excludeChildren5)
tourdata <- tourdata[pptyp<8,]
tourdata[pdpurp==8,pdpurp:=7]
tourdata[pdpurp==9,pdpurp:=4]
tourdata[,ftwind:=ifelse(pptyp==1,1,2)]
tourdata[,stcat:=findInterval(subtrs,0:3)]
tourdata[,stops:=tripsh1+tripsh2-2]
tourdata[,stopscat:=findInterval(stops,1:6)]
tourdata[,h1stopscat:=findInterval(tripsh1-1,1:6)]
tourdata[,h2stopscat:=findInterval(tripsh2-1,1:6)]
tourdata[,pdpurp2:=ifelse(parent == 0,pdpurp,8)]
return(tourdata)
}
prep_tripdata <- function(tripdata,perdata)
{
tripdata <- merge(tripdata,perdata,by=c("hhno","pno"),all.x=T)
if(excludeChildren5)
tripdata <- tripdata[pptyp<8]
tripdata[dpurp==8,dpurp:=7]
tripdata[dpurp==9,dpurp:=4]
tripdata[dpurp==0,dpurp:=8]
tripdata[,ocounty:=countycorr$DISTRICT[match(otaz,countycorr$TAZ)]]
return(tripdata)
}
if(prepSurvey)
{
survperdata <- assignLoad(paste0(surveyperfile,".Rdata"))
survhhdata <- assignLoad(paste0(surveyhhfile,".Rdata"))
survperdata <- prep_perdata(survperdata,survhhdata)
survperdata <- survperdata[,c("hhno","pno","pptyp","hhcounty","inccat","vehsuf","psexpfac"),with=F]
if(tourAdj)
{
setnames(touradj,2,"adjfac")
survperdata <- merge(survperdata,touradj,by=c("pptyp"),all.x=T)
survperdata[is.na(adjfac),adjfac:=1]
survperdata[,psexpfac_orig:=psexpfac]
survperdata[,psexpfac:=psexpfac*adjfac]
}
rm(survhhdata)
survpdaydata <- assignLoad(paste0(surveypdayfile,".Rdata"))
survpdaydata <- prep_pdaydata(survpdaydata,survperdata)
write_tables(daypatmodelout,survpdaydata,daypatmodelfile1,"survey")
rm(survpdaydata)
survtourdata <- assignLoad(paste0(surveytourfile,".Rdata"))
survtourdata <- prep_tourdata(survtourdata,survperdata)
write_tables(daypatmodelout,survtourdata,daypatmodelfile2,"survey")
rm(survtourdata)
survtripdata <- assignLoad(paste0(surveytripfile,".Rdata"))
survtripdata <- prep_tripdata(survtripdata,survperdata)
write_tables(daypatmodelout,survtripdata,daypatmodelfile3,"survey")
rm(survperdata,survtripdata)
gc()
}
if(prepDaySim)
{
dsperdata <- assignLoad(paste0(dsperfile,".Rdata"))
dshhdata <- assignLoad(paste0(dshhfile,".Rdata"))
dsperdata <- prep_perdata(dsperdata,dshhdata)
dsperdata <- dsperdata[,c("hhno","pno","pptyp","hhcounty","inccat","vehsuf","psexpfac"),with=F]
rm(dshhdata)
dspdaydata <- assignLoad(paste0(dspdayfile,".Rdata"))
dspdaydata <- prep_pdaydata(dspdaydata,dsperdata)
write_tables(daypatmodelout,dspdaydata,daypatmodelfile1,"daysim")
rm(dspdaydata)
dstourdata <- assignLoad(paste0(dstourfile,".Rdata"))
dstourdata <- prep_tourdata(dstourdata,dsperdata)
write_tables(daypatmodelout,dstourdata,daypatmodelfile2,"daysim")
rm(dstourdata)
dstripdata <- assignLoad(paste0(dstripfile,".Rdata"))
dstripdata <- prep_tripdata(dstripdata,dsperdata)
write_tables(daypatmodelout,dstripdata,daypatmodelfile3,"daysim")
rm(dsperdata,dstripdata)
gc()
}
print("Day Pattern Summary...Finished")
survtripdata <- assignLoad(paste0(surveytripfile,".Rdata"))
names(survtripdata)
survpdaydata <- assignLoad(paste0(surveypdayfile,".Rdata"))
survpdaydata <- prep_pdaydata(survpdaydata,survperdata)
write_tables(daypatmodelout,survpdaydata,daypatmodelfile1,"survey")
rm(survpdaydata)
names(survpdaydata)
survpdaydata <- assignLoad(paste0(surveypdayfile,".Rdata"))
survpdaydata <- prep_pdaydata(survpdaydata,survperdata)
write_tables(daypatmodelout,survpdaydata,daypatmodelfile1,"survey")
names(survpdaydata)
survpdaydata <- assignLoad(paste0(surveypdayfile,".Rdata"))
survpdaydata <- prep_pdaydata(survpdaydata,survperdata)
write_tables(daypatmodelout,survpdaydata,daypatmodelfile1,"survey")
rm(survpdaydata)
survtourdata <- assignLoad(paste0(surveytourfile,".Rdata"))
survtourdata <- prep_tourdata(survtourdata,survperdata)
write_tables(daypatmodelout,survtourdata,daypatmodelfile2,"survey")
rm(survtourdata)
survtripdata <- assignLoad(paste0(surveytripfile,".Rdata"))
survtripdata <- prep_tripdata(survtripdata,survperdata)
write_tables(daypatmodelout,survtripdata,daypatmodelfile3,"survey")
rm(survperdata,survtripdata)
